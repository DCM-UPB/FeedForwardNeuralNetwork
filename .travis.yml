sudo: required
language: c++
services:
- docker

matrix:
  include:
#  - os: linux // ubuntu trusty has too old GSL lib
#    addons:
#      apt:
#        sources:
#          - ubuntu-toolchain-r-test
#        packages:
#          - g++-7
#          - libgsl0-dev
#          - valgrind
#    env:
#      - MYCXX="g++-7"
#      - USE_DOCKER="FALSE"

  - os: linux // arch linux docker
    env:
    - MYCXX="g++"
    - USE_DOCKER="TRUE"
    - USE_OPENMP="FALSE"
    - USE_GCOV="FALSE"

  - os: linux // with enabled openmp
    env:
    - MYCXX="g++"
    - USE_DOCKER="TRUE"
    - USE_OPENMP="TRUE"
    - USE_GCOV="FALSE"

  - os: osx
    osx_image: xcode8
    env:
    - MATRIX_EVAL="brew update && brew install gcc gsl valgrind"
    - MYCXX="g++"
    - USE_DOCKER="FALSE"
    - USE_OPENMP="FALSE"
    - USE_GCOV="TRUE"

before_install:
- |
  if [[ "$USE_DOCKER" == "TRUE" ]]; then
  docker pull nnvmc/base;
  if [[ "$USE_OPENMP" == "TRUE" ]]; then
  docker run -it -e MYCXX -v $(pwd):/root/repo nnvmc/base /bin/bash -c "cd /root/repo && ./autogen.sh && ./configure CXX=${MYCXX} --enable-debug --enable-openmp";
  else
  docker run -it -e MYCXX -v $(pwd):/root/repo nnvmc/base /bin/bash -c "cd /root/repo && ./autogen.sh && ./configure CXX=${MYCXX} --enable-debug";
  fi;
  else
  eval "${MATRIX_EVAL}" && ${CXX} -v;
  ./autogen.sh
  if [[ "$USE_GCOV" == "TRUE" ]]; then
  ./configure CXX=${MYCXX} --enable-debug --enable-coverage;
  pip install cpp-coveralls;
  else
  ./configure --enable-debug;
  fi;
  fi;

script:
- |
  if [[ "$USE_DOCKER" == "TRUE" ]]; then
  docker run -it -v $(pwd):/root/repo nnvmc/base /bin/bash -c "cd /root/repo && make check || exit 1";
  else
  make check || exit 1;
  if [[ "$USE_GCOV" == "TRUE" ]]; then coveralls -r ./ -b ./ -e include -e lib -e test -e benchmark -e examples -e doc -e script -i src --gcov-options '\-lp'; fi;
  fi;

notifications:
  email:
    on_success: change
    on_failure: change
